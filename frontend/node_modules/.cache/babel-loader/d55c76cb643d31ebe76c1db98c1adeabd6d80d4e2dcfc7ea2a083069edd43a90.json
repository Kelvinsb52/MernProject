{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useSignUp = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, password) => {\n    console.log('Sending signup request:', {\n      email,\n      password\n    });\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok)\n      // Save the User to Local Storage\n      {\n        localStorage.setItem('user', JSON.stringify(json));\n        dispatch({\n          type: 'LOGIN',\n          payload: json\n        });\n        setIsLoading(false);\n      }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignUp, \"XLolJbgaWhcWCQyQceNUQz8r1xc=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignUp","_s","error","setError","isLoading","setIsLoading","dispatch","signup","email","password","console","log","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["/Users/kelvin/resumesaas/frontend/src/hooks/useSignUp.js"],"sourcesContent":["import { useState} from 'react'\nimport { useAuthContext} from './useAuthContext'\n\nexport const useSignUp = () =>\n{\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(null)\n    const {dispatch} = useAuthContext()\n\n\n    const signup = async (email, password) =>\n    {\n        console.log('Sending signup request:', { email, password });\n\n        setIsLoading(true)\n        setError(null)\n\n        const response = await fetch('/api/user/signup', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({email, password})\n        })\n        const json = await response.json()\n\n        if(!response.ok)\n        {\n            setIsLoading(false)\n            setError(json.error)\n        }\n        if (response.ok)\n            // Save the User to Local Storage\n        {\n            localStorage.setItem('user', JSON.stringify(json))\n\n            dispatch({type: 'LOGIN', payload: json})\n\n            setIsLoading(false)\n        }\n    }\n\n    return {signup, isLoading, error}\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAO,OAAO;AAC/B,SAASC,cAAc,QAAO,kBAAkB;AAEhD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KACzB;EAAAC,EAAA;EACI,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAACQ;EAAQ,CAAC,GAAGP,cAAc,CAAC,CAAC;EAGnC,MAAMQ,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KACrC;IACIC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE;MAAEH,KAAK;MAAEC;IAAS,CAAC,CAAC;IAE3DJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;MAC7CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACV,KAAK;QAAEC;MAAQ,CAAC;IAC1C,CAAC,CAAC;IACF,MAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAG,CAACP,QAAQ,CAACQ,EAAE,EACf;MACIf,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACgB,IAAI,CAACjB,KAAK,CAAC;IACxB;IACA,IAAIU,QAAQ,CAACQ,EAAE;MACX;MACJ;QACIC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;QAElDb,QAAQ,CAAC;UAACiB,IAAI,EAAE,OAAO;UAAEC,OAAO,EAAEL;QAAI,CAAC,CAAC;QAExCd,YAAY,CAAC,KAAK,CAAC;MACvB;EACJ,CAAC;EAED,OAAO;IAACE,MAAM;IAAEH,SAAS;IAAEF;EAAK,CAAC;AACrC,CAAC;AAAAD,EAAA,CAtCYD,SAAS;EAAA,QAICD,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}